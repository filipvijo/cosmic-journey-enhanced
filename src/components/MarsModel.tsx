/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/models/mars.glb --output src/components/MarsModel.tsx --types --shadows --keepnames 
*/

import * as THREE from 'three'
import { useGLTF } from '@react-three/drei'


type GLTFResult = {
  nodes: {
    mars_surface: THREE.Mesh
    mars_cloud: THREE.Mesh
    mars_atmosfera: THREE.Mesh
  }
  materials: {
    planet: THREE.MeshStandardMaterial
    ['cloud mars']: THREE.MeshStandardMaterial
    atmosfera: THREE.MeshStandardMaterial
  }
}

export function Model(props: React.ComponentProps<'group'>) {
  const { nodes, materials } = useGLTF('/models/mars.glb') as unknown as GLTFResult
  return (
    <group dispose={null}>
      <mesh name="mars_surface" castShadow receiveShadow geometry={nodes.mars_surface.geometry} material={materials.planet} scale={4} />
      <mesh name="mars_cloud" castShadow receiveShadow geometry={nodes.mars_cloud.geometry} material={materials['cloud mars']} scale={4.016} />
      <mesh name="mars_atmosfera" castShadow receiveShadow geometry={nodes.mars_atmosfera.geometry} material={materials.atmosfera} scale={4.056} />
    </group>
  )
}

useGLTF.preload('/models/mars.glb')
