/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/models/mars.glb --output src/components/MarsModel.tsx --types --shadows --keepnames --transform 
Files: public/models/mars.glb [12.07MB] > J:\cosmic-journey-secondbackup\src\components\mars-transformed.glb [449.22KB] (96%)
*/

import * as THREE from 'three'
import React from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Cube: THREE.Mesh
    Mars: THREE.Mesh
    deimos: THREE.Mesh
    phobos: THREE.Mesh
  }
  materials: {
    Material: THREE.MeshStandardMaterial
    Mars: THREE.MeshStandardMaterial
    deimos: THREE.MeshStandardMaterial
    Phobos: THREE.MeshStandardMaterial
  }
  animations: GLTFAction[]
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/models/mars.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh name="Cube" castShadow receiveShadow geometry={nodes.Cube.geometry} material={materials.Material} />
      <mesh name="Mars" castShadow receiveShadow geometry={nodes.Mars.geometry} material={materials.Mars} position={[0, 1, 0.535]} scale={13.4} />
      <mesh name="deimos" castShadow receiveShadow geometry={nodes.deimos.geometry} material={materials.deimos} position={[0, 1, -21.017]} rotation={[Math.PI / 2, 0, 0]} scale={0.004} />
      <mesh name="phobos" castShadow receiveShadow geometry={nodes.phobos.geometry} material={materials.Phobos} position={[0, 1, -19.778]} rotation={[Math.PI / 2, 0, 0]} scale={0.004} />
    </group>
  )
}

useGLTF.preload('/models/mars.glb')
