/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/models/saturn.glb --output src/components/SaturnModel.tsx --types --shadows --keepnames --transform 
Files: public/models/saturn.glb [2.73MB] > J:\cosmic-journey-secondbackup\src\components\saturn-transformed.glb [211.16KB] (92%)
*/

import * as THREE from 'three'
import React from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Saturn: THREE.Mesh
    Cube081: THREE.Mesh
    Saturn_Rings: THREE.Mesh
  }
  materials: {
    Saturn: THREE.MeshStandardMaterial
    Jupiter_moons: THREE.MeshStandardMaterial
    Saturn_Rings: THREE.MeshStandardMaterial
  }
  animations: GLTFAction[]
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/models/saturn.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh name="Saturn" castShadow receiveShadow geometry={nodes.Saturn.geometry} material={materials.Saturn} position={[0, 1, 2.058]} scale={70} />
      <mesh name="Cube081" castShadow receiveShadow geometry={nodes.Cube081.geometry} material={materials.Jupiter_moons} position={[110.114, -8.072, 115.836]} rotation={[Math.PI / 2, 0, -1.659]} scale={1.055} />
      <mesh name="Saturn_Rings" castShadow receiveShadow geometry={nodes.Saturn_Rings.geometry} material={materials.Saturn_Rings} position={[0, 1, 2.058]} scale={[76.943, 6.925, 76.943]} />
    </group>
  )
}

useGLTF.preload('/models/saturn.glb')
