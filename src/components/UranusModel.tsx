/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/models/uranus.glb --output src/components/UranusModel.tsx --types --shadows --keepnames --transform 
Files: public/models/uranus.glb [1.7MB] > J:\cosmic-journey-secondbackup\src\components\uranus-transformed.glb [153.1KB] (91%)
*/

import * as THREE from 'three'
import React from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Uranus: THREE.Mesh
    Cube163: THREE.Mesh
    Uranus_Rings003: THREE.Mesh
  }
  materials: {
    Uranus: THREE.MeshStandardMaterial
    Jupiter_moons: THREE.MeshStandardMaterial
    Uranus_Rings: THREE.MeshStandardMaterial
  }
  animations: GLTFAction[]
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/models/uranus.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh name="Uranus" castShadow receiveShadow geometry={nodes.Uranus.geometry} material={materials.Uranus} position={[0, 1, 1.377]} rotation={[1.309, 0, 0]} scale={25.25} />
      <mesh name="Cube163" castShadow receiveShadow geometry={nodes.Cube163.geometry} material={materials.Jupiter_moons} position={[25.449, -34.49, 7.013]} rotation={[2.88, 0, -Math.PI / 2]} scale={0.514} />
      <mesh name="Uranus_Rings003" castShadow receiveShadow geometry={nodes.Uranus_Rings003.geometry} material={materials.Uranus_Rings} position={[0, 1, 1.377]} rotation={[1.309, 0, 0]} scale={[29.501, 2.655, 29.501]} />
    </group>
  )
}

useGLTF.preload('/models/uranus.glb')
