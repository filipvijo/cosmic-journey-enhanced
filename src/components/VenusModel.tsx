/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/models/venus.glb --output src/components/VenusModel.tsx --types --shadows --keepnames 
*/

import React from 'react'; // Added React import
import * as THREE from 'three';
import { useGLTF } from '@react-three/drei';

type GLTFResult = { // Removed GLTF &
  nodes: {
    Куб: THREE.Mesh;
    Куб_1: THREE.Mesh;
    Куб_2: THREE.Mesh;
  };
  materials: {
    venus: THREE.MeshStandardMaterial;
    clouds: THREE.MeshStandardMaterial;
    atmosphere: THREE.MeshStandardMaterial;
  };
};

export function Model(props: React.ComponentProps<'group'>) { // Changed from JSX.IntrinsicElements['group']
  const { nodes, materials } = useGLTF('/models/venus.glb') as unknown as GLTFResult; // Fixed path and added type assertion
  return (
    <group {...props} dispose={null}>
      <mesh name="Куб" castShadow receiveShadow geometry={nodes.Куб.geometry} material={materials.venus} />
      <mesh name="Куб_1" castShadow receiveShadow geometry={nodes.Куб_1.geometry} material={materials.clouds} />
      <mesh name="Куб_2" castShadow receiveShadow geometry={nodes.Куб_2.geometry} material={materials.atmosphere} />
    </group>
  );
}

useGLTF.preload('/models/venus.glb'); // Fix path here too
